K-means clustering: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 50/50 [00:00<00:00, 210.39it/s]
Training prior: :   0%|                                                                                                                                          | 0/40 [00:00<?, ?it/s]
Training prior epoch 0:   0%|                                                                                                                                     | 0/8 [00:00<?, ?it/s]
done step 1/50, re-initialized 8 dead clusters
[2022-08-23 23:28:19,022][models.libraries.mingpt.model][INFO] - number of parameters: 2.634752e+06
> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(89)encode_into_latent()
     88         # flatten the input action
---> 89         flattened_actions = input_action.view(-1, self.action_dim)
     90
[?2004h[?1l[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?2ipdb> k
[?7h[?12l[?25h[?2004l*** NameError: name 'k' is not defined

[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ll[?7h[?12l[?25h[?ipdb> l
[?7h[?12l[?25h[?2004l[1m     84 [22m        assert (
[1m     85 [22m            input_action.shape[-1] == self.action_dim
[1m     86 [22m        ), "Input action dimension does not match fitted model"
[1m     87 [22m        import ipdb; ipdb.set_trace()
[1m     88 [22m        # flatten the input action
---> 89         flattened_actions = input_action.view(-1, self.action_dim)
[1m     90 
[1m     91 [22m        # get the closest cluster center
[1m     92 [22m        closest_cluster_center = torch.argmin(
[1m     93 [22m            torch.sum(
[1m     94 [22m                (flattened_actions[:, None, :] - self.bin_centers[None, :, :]) ** 2,

[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7linput_action[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7lipdb> input_action.shape
[?7h[?12l[?25h[?2004ltorch.Size([128, 10, 7])
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7linput_action[?7h[ipdb> input_action
[?7h[?12l[?25h[?2004ltensor([[[ 9.3257e-03, -2.2187e-02, -3.3638e-04,  ..., -3.7198e-02,
           4.4656e-02,  1.0000e+00],
         [ 1.1597e-02, -2.4001e-02, -9.7593e-03,  ...,  1.1150e-02,
           3.2406e-02,  1.0000e+00],
         [ 8.4894e-03, -2.0256e-02, -1.2059e-02,  ...,  6.8080e-03,
           3.7815e-02,  1.0000e+00],
         ...,
         [ 1.0180e-02,  3.1859e-03,  1.0414e-03,  ..., -1.1826e-02,
           2.1904e-02,  1.0000e+00],
         [ 8.4558e-03,  2.8444e-03, -1.3405e-03,  ...,  1.0911e-02,
           2.9952e-02,  1.0000e+00],
         [ 4.0962e-03,  1.6385e-03, -1.0075e-03,  ...,  1.3301e-04,
           7.9309e-03,  1.0000e+00]],
        [[-6.2827e-03,  9.6244e-04, -9.2091e-03,  ...,  9.3011e-03,
           7.2507e-03,  1.0000e+00],
         [-2.4242e-03,  2.8036e-03, -6.4814e-03,  ..., -2.5857e-03,
          -9.3383e-04,  1.0000e+00],
         [ 3.3333e-04,  1.7621e-03, -3.5904e-03,  ...,  1.4704e-03,
          -2.2162e-03,  1.0000e+00],
         ...,
         [ 2.3409e-03, -1.0985e-02,  2.4497e-02,  ..., -3.6592e-03,
           1.8911e-02,  0.0000e+00],
         [-3.8214e-04, -2.0639e-02,  1.4501e-02,  ..., -3.3561e-02,
           1.9033e-03,  0.0000e+00],
         [-3.7218e-03, -2.3207e-02,  1.4495e-03,  ..., -1.8604e-02,
          -1.1722e-02,  0.0000e+00]],
        [[ 6.0686e-03, -2.1489e-04, -2.5715e-03,  ...,  1.5252e-05,
           1.8765e-02,  1.0000e+00],
         [ 2.5438e-03,  1.0423e-04, -5.5423e-03,  ...,  2.2649e-03,
           7.6538e-03,  1.0000e+00],
         [-2.9572e-03, -5.5618e-04, -8.0593e-03,  ..., -1.1375e-03,
          -9.8325e-03,  1.0000e+00],
         ...,
         [ 2.3503e-03, -1.1622e-03,  1.9079e-02,  ..., -1.1926e-02,
          -1.0256e-02,  0.0000e+00],
         [ 4.5078e-03, -8.7011e-03,  3.2582e-02,  ..., -1.3341e-02,
          -6.4229e-02,  0.0000e+00],
         [-8.2485e-04, -1.5227e-02,  2.0926e-02,  ..., -1.8750e-02,
          -1.0228e-01,  0.0000e+00]],
        ...,
        [[-1.6813e-02, -2.8806e-02, -2.2468e-02,  ...,  1.7643e-02,
          -3.0817e-02,  0.0000e+00],
         [-1.0140e-02, -1.8724e-02, -1.9659e-02,  ..., -1.7808e-02,
          -2.8893e-02,  0.0000e+00],
         [ 4.7237e-03, -2.6065e-03, -1.3901e-02,  ..., -3.5594e-02,
          -2.3586e-02,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  1.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  1.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  1.0000e+00]],
        [[ 1.7189e-04,  1.4803e-05, -3.9126e-03,  ...,  1.1415e-02,
           2.1283e-02,  6.4811e-01],
         [ 5.7116e-03,  3.0819e-03,  1.6178e-02,  ..., -1.1086e-02,
           4.9570e-02,  0.0000e+00],
         [ 6.7119e-03,  1.7892e-03,  3.0475e-02,  ..., -8.5714e-03,
           5.5963e-02,  0.0000e+00],
         ...,
         [ 1.8020e-03,  1.6675e-02, -1.1391e-02,  ..., -1.2407e-02,
           4.9134e-02,  0.0000e+00],
         [ 1.3925e-03,  1.2594e-02, -1.0591e-02,  ..., -3.1730e-03,
           2.4297e-02,  0.0000e+00],
         [ 4.0195e-03,  1.3762e-02, -1.3388e-02,  ..., -1.7282e-02,
           1.2738e-02,  0.0000e+00]],
        [[ 8.1726e-03,  2.2224e-02, -3.8316e-03,  ..., -1.9672e-02,
           1.4971e-02,  1.0000e+00],
         [ 8.1172e-03,  1.2540e-02, -2.3463e-03,  ..., -8.1126e-03,
           1.4004e-02,  1.0000e+00],
         [ 7.7375e-03,  4.4204e-03, -6.5240e-03,  ..., -3.5769e-03,
           1.2076e-02,  1.0000e+00],
         ...,
         [ 6.3951e-03, -1.2876e-03, -7.1450e-03,  ..., -3.0985e-03,
           3.0185e-02,  1.0000e+00],
         [ 2.9834e-03, -2.7150e-03, -3.3487e-03,  ..., -1.9116e-04,
           2.2064e-02,  1.0000e+00],
         [ 1.5347e-03,  7.0822e-04, -9.6722e-04,  ...,  8.3085e-03,
           8.3949e-03,  2.2540e-01]]], device='cuda:0')
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7linput_action[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ld[?7h[?12l[?25h



[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(92)encode_into_latent()
     91         # get the closest cluster center
---> 92         closest_cluster_center = torch.argmin(
     93             torch.sum(

[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lflattened_actions[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ld[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7ly[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25ipdb> flattened_actions.dtype
[?7h[?12l[?25h[?2004ltorch.float32
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(93)encode_into_latent()
     92         closest_cluster_center = torch.argmin(
---> 93             torch.sum(
     94                 (flattened_actions[:, None, :] - self.bin_centers[None, :, :]) ** 2,
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(94)encode_into_latent()
     93             torch.sum(
---> 94                 (flattened_actions[:, None, :] - self.bin_centers[None, :, :]) ** 2,
     95                 dim=2,
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(95)encode_into_latent()
     94                 (flattened_actions[:, None, :] - self.bin_centers[None, :, :]) ** 2,
---> 95                 dim=2,
     96             ),
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
                                                                                  [?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(92)encode_into_latent()
     91         # get the closest cluster center
---> 92         closest_cluster_center = torch.argmin(
     93             torch.sum(
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py(100)encode_into_latent()
     99         # Reshape to the original shape
--> 100         discretized_action = closest_cluster_center.view(input_action.shape[:-1] + (1,))
    101
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lclosest_cluster_center[?7h[?12l[?25h
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lclosest_cluster_center[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7d[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h


[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lflattened_actions[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ld[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7ly[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25ipdb> flattened_actions.dtype
[?7h[?12l[?25h[?2004ltorch.float32



Training prior: :   0%|                                                                                                                                          | 0/40 [01:27<?, ?it/s]
Error executing job with overrides: []
Traceback (most recent call last):
  File "train.py", line 287, in main
    workspace.run()
  File "train.py", line 186, in run
    self.train_prior()
  File "train.py", line 130, in train_prior
    latent = self.action_ae.encode_into_latent(act, enc_obs)
  File "/nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py", line 100, in encode_into_latent
    discretized_action = closest_cluster_center.view(input_action.shape[:-1] + (1,))
  File "/nfs/kun2/users/asap7772/bet/models/action_ae/discretizers/k_means.py", line 100, in encode_into_latent
    discretized_action = closest_cluster_center.view(input_action.shape[:-1] + (1,))
  File "/home/asap7772/miniconda3/envs/behavior-transformer/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/asap7772/miniconda3/envs/behavior-transformer/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
[?7h[?12l[?25h[?2004ltorch.float64
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?2ipdb>
[?7h[?12l[?25h[?2004l